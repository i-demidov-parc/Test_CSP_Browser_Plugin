Ставим плагин LCSignPlugin_setup. В папке LCPDistrib установщики с продакшена.

Устанавливаем криптопровайдер. В папке КриптоПро лежат установщики CSPSetup 2013 и более свежий cspsetup.

Ставим необходимые сертификаты:

Для этого идем на сайт тестового удостоверяющего центра ООО "КРИПТО-ПРО". Только IE!
http://www.cryptopro.ru/certsrv/

Выбираем "Сформировать ключи и отправить запрос на сертификат".

Если у вас не активна кнопка "Выдать", а поле "CSP" в разделе параметров ключа
и поле дополнительных параметров "Алгоритм хеширования" пустые, то сертификат вам просто так не дадут.
Открываем свойства браузера(напомню, в IE) -> Безопасность -> Кнопка "Другой..." в разделе "Уровень безопасности для этой зоны".
Там в разделе "Элементы ActiveX и модули подключения" все пункты включаем или выставляем "предлагать".

Снова идем на страницу получения сертификатов.
Заполняем идентифицирующие сведения.
Остальные настройки меняем по желанию.
Я, лично, ставил, в качестве использования ключей, подпись.
И помечал ключ, как экспортируемый.

При клике по кнопке выдачи выскочет окно криптопровайдера с выбором носителя контейнера ключа.
Если нет никаких токенов, то ставим в реестр.

Далее, долбим по клавиатуре.(ываыварышвыарывдлаоыволиаппироип)

Вводим пароль для контейнера ключа.

В браузере появится ссылка на сертификат пользователя.
При клике по нему вам сообщат, что данный центр сертификации не является доверенным,
и нужно установить корневой сертификат, ссылка на который будет так же на странице.
Открываем сертификат сразу или после сохранения.

Сертификат устанавливаем в "Доверенные корневые центры".

Затем устанавливаем сертификат, удостоверяющий личность, который мы, собственно, и запрашивали.

Теперь можно тестировать индексовую страницу.

Назначение кнопок:

1.	Выводить сообщения в документе - кнопка, которая переключает метод вывода сообщений, содержащих результат действий пользователя.
	Например, при удачном подписании файла появится сообщение, что файл пописан, и будут выведены пути подписанного файла и файла подписи.
	Сообщения могут выводиться на странице приложения(непосредственно в документе), в консоли браузера или во всплывающих окнах.

2.	Очистить - кнопка видна только при режиме вывода сообщений в документе. Очищает список сообщений.

3.	Проверить доступные методы плагина - выводит тип подключенного плагина, если это возможно.
	Так же выводятся типы данных, к которым может относиться плагин. Они выведуться, если браузер это позволяет.
	Далее идет список доступных методов плагина. В зависимости от браузера, список может различаться.
	Под именем метода стоит значения: true - метод поддерживается, false - метод не поддерживается.
	Если в каком-то браузере, в отличие от другого, не вывелось какое-то название метода, то он не поддерживается.

4.	Подписать файл - выбираем файл, кторый будем подписывать. Подпись будет создана отдельным файлом.

5.	Подписать файл с присоединенной подписью - выбираем файл, кторый будем подписывать. Будет создан файл подписи с вложенным в нем документом,
	который можно будет просмотреть с помощью СКЗИ, например Крипто-Арм. При этом, если изменить ранее выбранный для подписи файл, то подпись
	не потеряет свою силу, так как состояние файла на момент подписи ужу содержится в файле подписи.

6.	Проверить файл подписи - выбираем файл, который подписывали, а не подпись.

7.	Проверить вложенную подпись - выбираем подпись с вложенным документом.

8.	Декодировать файл - выбираем любой файл. Выведется представление файла в формате Base64.
	Большие файлы обрабатываются долбше. Тестить лучше на файлах отдельной подписи.
